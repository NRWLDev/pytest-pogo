[tool.poetry]
name = "pytest-pogo"
version = "0.0.4"
description = "Pytest plugin for pogo-migrate"
readme = "README.md"
homepage = "https://github.com/NRWLDev/pytest-pogo"
authors = [
    "Daniel Edgecombe <daniel@nrwl.co>"
]
maintainers = [
    "Daniel Edgecombe <daniel@nrwl.co>",
]
keywords = ["migrations", "migrate", "database", "asyncpg", "pytest"]
license = "Apache"
classifiers = [
    "Development Status :: 1 - Planning",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Topic :: Database",
    "Topic :: Software Development",
    "Topic :: Software Development :: Version Control",
    "Programming Language :: Python :: 3",
]

[tool.poetry.dependencies]
python = "^3.9"

pogo-migrate = ">=0.0.8,<1.0.0"
pytest = ">=7,<9"

[tool.poetry.group.dev.dependencies]
pytest-asyncio = "^0.21"
pytest-cov = "^4.1.0"
pytest-random-order = "^1.0.4"
pytest-env = "^0.8.1"

# Style
ruff = "^0.3.0"
pre-commit = "^3.0.2"

# Release management
changelog-gen = "^0.12"
asyncpg = "^0.29.0"

[tool.changelog_gen]
current_version = "0.0.4"
reject_empty = true
allowed_branches = [
    "main",
]
date_format = "- %Y-%m-%d"

[tool.changelog_gen.github]
strip_pr_from_description = true
extract_pr_from_description = true
extract_common_footers = true

[[tool.changelog_gen.extractors]]
footer = ["closes", "fixes", "Refs"]
pattern = '#(?P<issue_ref>\d+)'

[[tool.changelog_gen.link_generators]]
source = "issue_ref"
link = "https://github.com/NRWLDev/pytest-pogo/issues/{0}"

[[tool.changelog_gen.link_generators]]
source = "__change__"
text = "{0.short_hash}"
link = "https://github.com/NRWLDev/pytest-pogo/commit/{0.commit_hash}"

[[tool.changelog_gen.files]]
filename = "pyproject.toml"
pattern = 'version = "{version}"'

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
addopts = "--random-order"
env = [
    "D:POSTGRES_DSN=postgres://unit:password@localhost:5436/unit",
]


[tool.coverage.report]
sort = "cover"
fail_under = 95
show_missing = true
skip_covered = true

[tool.coverage.run]
branch = true
source = ["pytest_pogo"]

[tool.ruff]
target-version = "py39"
line-length = 120

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "B008",    # fastapi involves a lot of function calls in function definitions
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D107",
    "FIX002",  # allow TODO
]

[tool.ruff.format]
line-ending = "lf"
quote-style = "double"

[tool.ruff.lint.per-file-ignores]
"tasks.py" = ["ANN", "E501", "INP001", "S"]
"tests/*" = ["ANN", "D", "S101", "INP001"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.lint.isort]
known-first-party = ["pogo_migrate"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.poetry.plugins.pytest11]
pogo = "pytest_pogo"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pogo]
migrations = "./tests/migrations"
database_env_key = "POSTGRES_DSN"
